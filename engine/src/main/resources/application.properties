# Configure the PostgreSQL database in the production environment.
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=quarkus_test
%prod.quarkus.datasource.password=quarkus_test
%prod.quarkus.datasource.reactive.url=vertx-reactive:postgresql://localhost/quarkus_test

# Configure the RabbitMQ broker connection in the production environment.
%prod.rabbitmq-host=amqp
%prod.rabbitmq-port=5672
%prod.rabbitmq-username=my-username
%prod.rabbitmq-password=my-password

# Configure the database generation settings.
quarkus.hibernate-orm.database.generation=create
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=no-file

# Configure the incoming RabbitMQ queues.
mp.messaging.incoming.requests.queue.name=engine-requests
mp.messaging.incoming.requests.exchange.name=engine-requests

# Allow merging of RabbitMQ requests on the outbound stream.
mp.messaging.outgoing.engine-requests.merge=true

# Configure the autonomous data gathering services.
engine.auto.scheduled.enabled = false
engine.auto.scheduled.cron = */30 * * * * ?
engine.auto.startup.enabled = true
engine.auto.startup.base-dir = static/
